{"version":3,"sources":["App.styles.tsx","pixiRender.ts","App.tsx","index.tsx"],"names":["insertCss","LABEL_FONT_FAMILY","window","devicePixelRatio","Math","SQRT2","renderId","undefined","app","PIXI","transparent","antialias","autoDensity","width","document","body","clientWidth","height","clientHeight","onresize","event","resolution","w","innerWidth","h","innerHeight","w2","round","h2","renderer","view","style","resize","console","log","addEventListener","e","ctrlKey","preventDefault","passive","textAlign","appendChild","div","createElement","viewport","Viewport","screenWidth","offsetWidth","screenHeight","offsetHeight","interaction","plugins","rand","n","random","moveCenter","drag","pinch","wheel","decelerate","stage","addChild","nodesLayer","linksLayer","labelsLayer","frontLabelsLayer","on","removeChild","nodes","A","map","i","id","x","y","nodeFn","reduce","acc","v","nodeGfx","interactive","buttonMode","hitArea","labelGfx","label","fontName","fontSize","align","tint","name","labelBackground","WHITE","LABEL_PADDING","alpha","node","position","set","linkFn","src","trg","linkGfx","pivot","rotation","atan2","line","lineLength","max","sqrt","a","Promise","resolve","loader","add","load","FontFaceObserver","catch","forEach","App","useEffect","requestAnimationFrame","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83bb93ae.chunk.js","sourcesContent":["import { insertCss } from \"insert-css\";\n\ninsertCss(`\n  html, body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n\t  overflow: hidden;\n    font-family: 'Exo 2', 'Exo+2', serif, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-size: 13px;\n    font-weight: 400;\n    font-style: normal;\n    line-height: 13px;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n  }\n\n  * {\n    font-family: 'Exo 2', 'Exo+2', serif, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',\n      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    font-weight: 400;\n  }\n\n  #root {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n  }\n\n  #app {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n  }\n\n  #graph {\n    border: 1px solid black;\n    display: flex;\n    flex: 1;\n  }\n\n  .diagram-container{\n    background: #fff;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex: 1;\n  }\n`);\n","import * as PIXI from \"pixi.js\";\nimport * as A from \"fp-ts/Array\";\nimport { Viewport } from \"pixi-viewport\";\nimport FontFaceObserver from \"fontfaceobserver\";\n\nconst RESOLUTION = window.devicePixelRatio;\nconst NODE_RADIUS = 15;\nconst NODE_BORDER_WIDTH = 2;\nconst NODE_BORDER_COLOR = 0xffffff;\nconst NODE_BORDER_RADIUS = NODE_RADIUS + NODE_BORDER_WIDTH;\nconst NODE_HIT_WIDTH = 5;\nconst NODE_HIT_RADIUS = NODE_RADIUS + NODE_HIT_WIDTH;\nconst NODE_HOVER_BORDER_COLOR = 0x000000;\nconst ICON_FONT_FAMILY = \"Material Icons\";\nconst ICON_FONT_SIZE = (NODE_RADIUS / Math.SQRT2) * 2;\nconst ICON_COLOR = 0xffffff;\nconst ICON_TEXT = (nodeData: GNode) =>\n  typeof nodeData.id === \"number\" ||\n  (typeof nodeData.id === \"string\" &&\n    (!isNaN(parseInt(nodeData.id[0], 10)) || nodeData.id[0] === \"(\"))\n    ? \"star\"\n    : \"person\";\nconst LABEL_FONT_FAMILY = \"HelveticaRegular\";\nconst LABEL_FONT_SIZE = 12;\nconst LABEL_COLOR = 0x333333;\nconst LABEL_TEXT = (nodeData: GNode) => `${nodeData.id}`;\nconst LABEL_PADDING = 1;\nconst LABEL_BACKGROUND_COLOR = 0xffffff;\nconst LABEL_BACKGROUND_ALPHA = 0.5;\nconst LABEL_HOVER_BACKGROUND_COLOR = 0xeeeeee;\nconst LABEL_HOVER_BACKGROUND_ALPHA = 1;\nconst LINK_SIZE = (linkData: { value: number }) =>\n  Math.log((linkData.value || 1) + 1);\nconst LINK_COLOR = 0xcccccc;\nconst LINK_HOVER_COLOR = 0x999999;\n\nconst TEXTURE_COLOR = 0xffffff;\n\nconst CIRCLE = \"CIRCLE\";\nconst CIRCLE_BORDER = \"CIRCLE_BORDER\";\nconst ICON = \"ICON\";\nconst LABEL = \"LABEL\";\nconst LABEL_BACKGROUND = \"LABEL_BACKGROUND\";\nconst LINE = \"LINE\";\n\nlet renderId: number | undefined = undefined;\n\nexport const app = new PIXI.Application({\n  transparent: true,\n  antialias: false,\n  autoDensity: false,\n  width: document.body.clientWidth,\n  height: document.body.clientHeight,\n  // autoStart: false,\n});\n\nwindow.onresize = function (event: UIEvent) {\n  var resolution = window.devicePixelRatio;\n  var w = window.innerWidth;\n  var h = window.innerHeight;\n  var w2 = Math.round(w * resolution);\n  var h2 = Math.round(h * resolution);\n  app.renderer.view.style.width = w + \"px\";\n  app.renderer.view.style.height = h + \"px\";\n  app.renderer.resize(w2, h2);\n  console.log(\"onresize\");\n};\n\ndocument.body.addEventListener(\n  \"wheel\",\n  (e) => {\n    if (e.ctrlKey) e.preventDefault(); //prevent zoom\n  },\n  { passive: false }\n);\n\napp.view.style.textAlign = \"center\";\ndocument.body.appendChild(app.view);\n\nconst div = document.createElement(\"div\");\ndocument.body.appendChild(div);\n\nexport const requestRender = () => {\n  if (renderId) {\n    return;\n  }\n  renderId = window.requestAnimationFrame(() => {\n    app.render();\n    renderId = undefined;\n  });\n};\n\nconst viewport = new Viewport({\n  screenWidth: app.view.offsetWidth,\n  screenHeight: app.view.offsetHeight,\n  interaction: app.renderer.plugins.interaction,\n});\n\n// const zoomIn = () => {\n//   viewport.zoom(-WORLD_WIDTH / 10, true);\n// };\n// const zoomOut = () => {\n//   viewport.zoom(WORLD_WIDTH / 10, true);\n// };\n// const resetViewport = () => {\n//   viewport.center = new PIXI.Point(WORLD_WIDTH * 2, WORLD_HEIGHT * 2);\n//   viewport.fitWorld(true);\n// };\n\n// activate plugins\nviewport.moveCenter(5000, 5000).drag().pinch().wheel().decelerate();\n\n// add the viewport to the stage\napp.stage.addChild(viewport);\n\n// add a red box\n// const sprite = viewport.addChild(new PIXI.Sprite(PIXI.Texture.WHITE));\n// sprite.tint = 0xff0000;\n// sprite.width = sprite.height = 100;\n// sprite.position.set(100, 100);\nfunction rand(n: number) {\n  return Math.round(Math.random() * n);\n}\n\nconst nodesLayer = new PIXI.Container();\nviewport.addChild(nodesLayer);\n\nconst linksLayer = new PIXI.Container();\nviewport.addChild(linksLayer);\n\nconst labelsLayer = new PIXI.Container();\nviewport.addChild(labelsLayer);\n\nconst frontLabelsLayer = new PIXI.Container();\nviewport.addChild(frontLabelsLayer);\n\nviewport.on(\"moved\", () => {\n  viewport.removeChild(labelsLayer);\n});\n\nviewport.on(\"moved-end\", () => {\n  viewport.addChild(labelsLayer);\n});\n\nviewport.on(\"drag-start\", () => {\n  viewport.removeChild(labelsLayer);\n});\n\nviewport.on(\"zoomed\", () => {\n  viewport.removeChild(labelsLayer);\n});\n\nviewport.on(\"zoomed-end\", () => {\n  viewport.addChild(labelsLayer);\n});\n\nviewport.on(\"drag-end\", () => {\n  viewport.addChild(labelsLayer);\n});\n\nlet nodes = A.range(1, 10000).map((i) => ({\n  id: i,\n  x: rand(10000),\n  y: rand(10000),\n}));\n\nlet nodesMap = nodes.reduce((acc: Record<number, GNode>, v: GNode) => {\n  acc[v.id] = v;\n  return acc;\n}, {});\n\ninterface GNode {\n  id: number;\n  x: number;\n  y: number;\n}\n\nconst nodeWidth = 28;\nconst nodeHeight = 18;\nconst nodeFn = (n: GNode) => {\n  const nodeGfx = new PIXI.Container();\n  nodeGfx.x = n.x;\n  nodeGfx.y = n.y;\n  nodeGfx.interactive = true;\n  nodeGfx.buttonMode = true;\n  nodeGfx.hitArea = new PIXI.Rectangle(0, 0, nodeWidth, nodeHeight);\n\n  const labelGfx = new PIXI.Container();\n  labelGfx.x = n.x;\n  labelGfx.y = n.y;\n  labelGfx.interactive = true;\n  labelGfx.buttonMode = true;\n\n  const label = new PIXI.BitmapText(LABEL_TEXT(n), {\n    fontName: LABEL_FONT_FAMILY,\n    fontSize: LABEL_FONT_SIZE,\n    align: \"center\",\n    tint: LABEL_COLOR,\n  });\n  label.name = LABEL;\n  label.x = 0;\n  label.y = 0;\n  const labelBackground = new PIXI.Sprite(PIXI.Texture.WHITE);\n  labelBackground.name = LABEL_BACKGROUND;\n  labelBackground.x = -(0 + LABEL_PADDING * 2) / 2;\n  labelBackground.y = 0;\n  labelBackground.width = label.width + LABEL_PADDING * 2;\n  labelBackground.height = label.height + LABEL_PADDING * 2;\n  labelBackground.tint = LABEL_BACKGROUND_COLOR;\n  labelBackground.alpha = LABEL_BACKGROUND_ALPHA;\n  labelGfx.addChild(labelBackground);\n  labelGfx.addChild(label);\n\n  const node = new PIXI.Sprite(PIXI.Texture.WHITE);\n  node.tint = 0xff0000;\n  node.position.set(n.x, n.y);\n  node.width = nodeWidth;\n  node.height = nodeHeight;\n\n  nodesLayer.addChild(node);\n  labelsLayer.addChild(labelGfx);\n};\n\nconst linkFn = (src: GNode, trg: GNode) => {\n  const linkGfx = new PIXI.Container();\n  linkGfx.x = src.x;\n  linkGfx.y = src.y;\n  linkGfx.pivot.set(0, 0);\n  linkGfx.rotation = Math.atan2(trg.y - src.y, trg.x - src.x);\n  linkGfx.interactive = true;\n  linkGfx.buttonMode = true;\n\n  const line = new PIXI.Sprite(PIXI.Texture.WHITE);\n  const lineLength = Math.max(\n    Math.sqrt((trg.x - src.x) ** 2 + (trg.y - src.y) ** 2),\n    0\n  );\n\n  line.x = 1;\n  line.y = 1;\n  line.width = lineLength;\n  line.height = 1;\n  line.tint = 0x00ff00;\n\n  linkGfx.addChild(line);\n  linksLayer.addChild(linkGfx);\n};\n\n(async () => {\n  // preload fonts\n  await new Promise((resolve) => {\n    app.loader\n      .add(\n        LABEL_FONT_FAMILY,\n        \"https://gist.githubusercontent.com/zakjan/b61c0a26d297edf0c09a066712680f37/raw/8cdda3c21ba3668c3dd022efac6d7f740c9f1e18/HelveticaRegular.fnt\"\n      )\n      .load(resolve);\n  });\n  await new FontFaceObserver(ICON_FONT_FAMILY)\n    .load()\n    .catch(() => (window as any).FontFaceObserver);\n\n  nodes.forEach(nodeFn);\n  // nodes.forEach((x, idx) => {\n  //   if (idx < nodes.length - 1) {\n  //     linkFn(nodes[idx], nodes[idx + 1]);\n  //   }\n  // });\n  for (let x = 0; x < 600; x++) {\n    linkFn(nodes[x], nodes[x + 1]);\n  }\n})();\n","import * as A from \"fp-ts/Array\";\nimport { pipe } from \"fp-ts/function\";\nimport * as T from \"fp-ts/Task\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.styles\";\nimport { requestRender } from \"./pixiRender\";\n\nfunction App() {\n  useEffect(() => {\n    requestRender();\n  });\n\n  return <div id=\"app\">App</div>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}